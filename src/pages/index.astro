---
import { format, parseISO } from "date-fns";
import Lines from "../components/lines.astro";
import StandingLine from "../components/standings.astro";
/**
 *
 * MOCKUP
 *
 */
// const gameDayDate = "2023-11-17";
// const { gameWeek } = gameDay;
// const { standings } = standingsApi;
// const { data: teams } = teamsList;
/** */

const gameDayDate = format(new Date(), "yyyy-MM-dd");
const games = await getScheduleOfTheDay(gameDayDate);
const standings = await getStandings(gameDayDate);
const dailyFaceoffToken = await getDailyFaceoffToken();
const teams = await getTeams();

async function getStandings(gameDayDate: string) {
  const response = await fetch(
    `https://api-web.nhle.com/v1/standings/${gameDayDate}`
  );
  const { standings } = await response.json();
  return standings;
}

async function getTeams() {
  const response = await fetch("https://api.nhle.com/stats/rest/en/team");
  const { data } = await response.json();
  return data;
}

async function getScheduleOfTheDay(gameDayDate: string) {
  let games = null;
  const scheduleUrl = `https://api-web.nhle.com/v1/schedule/${gameDayDate}`;
  const gamesRaw = await fetch(scheduleUrl);
  const { gameWeek } = await gamesRaw.json();
  const todayGames = gameWeek.find((item: any) => item.date === gameDayDate);
  if (todayGames) {
    games = todayGames.games;
  }
  return games;
}

async function getDailyFaceoffToken() {
  try {
    const dailyFaceoffTokenRaw = await fetch(
      "https://www.dailyfaceoff.com/_next/data"
    );
    const dailyFaceoffToken = await dailyFaceoffTokenRaw.text();
    let result = dailyFaceoffToken?.match(/buildId":"(\w+)","/);
    if (result) {
      return result[1];
    } else {
      throw "err";
    }
  } catch (error) {
    console.log(error);
  }
}

function findTeam(abbrev: String) {
  const team = teams.find((item: any) => item.triCode === abbrev);
  const slug = team?.fullName
    .toLowerCase()
    .replaceAll(" ", "-")
    .replaceAll(".", "")
    .replaceAll("Ã©", "e");
  return {
    fullName: team?.fullName,
    slug,
  };
}

function getTeamStanding(abbrev: String) {
  return standings.find((item: any) => item.teamAbbrev.default === abbrev);
}

async function getLines(slug: string) {
  try {
    // console.log(slug);
    const linesFormatted: any = {};
    const url = `https://www.dailyfaceoff.com/_next/data/${dailyFaceoffToken}/teams/`;
    const response = await fetch(url + slug + "/line-combinations.json");
    const lines = await response.json();
    const {
      pageProps: {
        combinations: { players },
      },
    } = lines;
    if (players) {
      for (const player of players) {
        if (player.groupIdentifier in linesFormatted) {
          linesFormatted[player.groupIdentifier].push(player);
        } else {
          linesFormatted[player.groupIdentifier] = [player];
        }
      }
    }
    return linesFormatted;
  } catch (error) {
    console.log("error lines", error);
  }
}
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>

    <style>
      /* #lines {
        min-height: 500px;
      } */
      /* #location {
        min-height: 100px;
      }
      #stats {
        min-height: 350px;
      }
      #teamsHead {
        min-height: 200px;
      } */

      #teamsHead::before {
        content: "x";
        position: absolute;
        left: 43%;
        top: 0;
        font-size: 10rem;
        color: #efefef;
        line-height: 0.5;
      }
    </style>
  </head>
  <body>
    <h1
      class="font-bold text-lg bg-black text-white max-w-xs rounded-full mx-auto my-10"
    >
      <a
        href="https://twitter.com/tudopelanhl"
        target="_blank"
        class="flex justify-center items-center"
      >
        <figure class="rounded-full">
          <img src="/avatar.jpeg" alt="" class="h-16 rounded-full m-2" />
        </figure>
         Tudo Pela NHL
      </a>
    </h1>
    <h2 class="text-center text-2xl font-bold border-b stroke-slate-300 pb-10">
      Games from {gameDayDate}
    </h2>
    <section class="flex flex-wrap">
      {
        games?.map(async (game: any) => {
          const { fullName: awayTeamName, slug: awayTeamSlug } = findTeam(
            game.awayTeam.abbrev
          );
          const { fullName: homeTeamName, slug: homeTeamSlug } = findTeam(
            game.homeTeam.abbrev
          );
          const homeLines = await getLines(homeTeamSlug);
          const homeStanding = await getTeamStanding(game.homeTeam.abbrev);
          const awayLines = await getLines(awayTeamSlug);
          const awayStanding = await getTeamStanding(game.awayTeam.abbrev);
          let headerCSS = "";
          if (game.specialEventLogo) {
            headerCSS = "basis-3/12";
          } else {
            headerCSS = "basis-4/12";
          }
          return (
            <>
              <article
                id="gameWrapper"
                class="flex-col justify-between h-full border-l stroke-slate-300 basis-4/12"
              >
                <header
                  id="location"
                  class="flex justify-between items-center h-32 w-full"
                >
                  <span class={headerCSS + " text-center text-slate-400"}>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24"
                      stroke-width="1.5"
                      stroke="currentColor"
                      class="w-6 h-6 mx-auto stroke-slate-400"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M6.115 5.19l.319 1.913A6 6 0 008.11 10.36L9.75 12l-.387.775c-.217.433-.132.956.21 1.298l1.348 1.348c.21.21.329.497.329.795v1.089c0 .426.24.815.622 1.006l.153.076c.433.217.956.132 1.298-.21l.723-.723a8.7 8.7 0 002.288-4.042 1.087 1.087 0 00-.358-1.099l-1.33-1.108c-.251-.21-.582-.299-.905-.245l-1.17.195a1.125 1.125 0 01-.98-.314l-.295-.295a1.125 1.125 0 010-1.591l.13-.132a1.125 1.125 0 011.3-.21l.603.302a.809.809 0 001.086-1.086L14.25 7.5l1.256-.837a4.5 4.5 0 001.528-1.732l.146-.292M6.115 5.19A9 9 0 1017.18 4.64M6.115 5.19A8.965 8.965 0 0112 3c1.929 0 3.716.607 5.18 1.64"
                      />
                    </svg>
                    {game.venue.default}
                  </span>
                  {game.specialEventLogo ? (
                    <span>
                      <img src={game.specialEventLogo} />
                      {game.specialEvent ? game.specialEvent.default : ""}
                    </span>
                  ) : (
                    ""
                  )}
                  <span class={headerCSS + " text-center text-slate-400"}>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24"
                      stroke-width="1.5"
                      stroke="currentColor"
                      class="w-6 h-6 mx-auto stroke-slate-400"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z"
                      />
                    </svg>
                    {format(parseISO(game.startTimeUTC), "dd/MM/yyyy HH:mm:ss")}
                  </span>
                </header>
                <section
                  id="teamsHead"
                  class="flex justify-between items-center px-10 w-full relative"
                >
                  <div>
                    <figure class="text-center">
                      <img src={game.awayTeam.logo} alt="" class="h-20 block" />
                      <legend class="mt-5">{awayTeamName}</legend>
                    </figure>
                    <p class="flex items-center justify-center text-sm">
                      <span>{awayStanding?.wins}-</span>
                      <span>{awayStanding?.losses}-</span>
                      <span>{awayStanding?.otLosses}</span>
                    </p>
                  </div>
                  <div>
                    <figure class="text-center">
                      <img src={game.homeTeam.logo} alt="" class="h-20 block" />
                      <legend class="mt-5">{homeTeamName}</legend>
                    </figure>
                    <p class="flex items-center justify-center text-sm">
                      <span>{homeStanding?.wins}-</span>
                      <span>{homeStanding?.losses}-</span>
                      <span>{homeStanding?.otLosses}</span>
                    </p>
                  </div>
                </section>
                <section id="stats" class="my-10 w-full">
                  <StandingLine
                    away={awayStanding?.divisionName}
                    home={homeStanding?.divisionName}
                    label="Division"
                  />
                  <StandingLine
                    away={awayStanding?.points}
                    home={homeStanding.points}
                    label="Points"
                  />
                  <StandingLine
                    away={awayStanding.goalFor}
                    home={homeStanding.goalFor}
                    label="Goals For"
                  />
                  <StandingLine
                    away={awayStanding?.goalAgainst}
                    home={homeStanding?.goalAgainst}
                    label="Goals Against"
                  />
                  <StandingLine
                    away={awayStanding?.l10Points}
                    home={homeStanding?.l10Points}
                    label="Last 10 games"
                    subLabel="20 points possible"
                  />
                  <StandingLine
                    away={awayStanding?.l10OtLosses}
                    home={homeStanding?.l10OtLosses}
                    label="Last 10 games"
                    subLabel="Ot Losses"
                  />
                  <StandingLine
                    away={awayStanding?.l10Losses}
                    home={homeStanding?.l10Losses}
                    label="Last 10 games"
                    subLabel="Loses"
                  />
                  <StandingLine
                    away={awayStanding?.streakCode}
                    home={homeStanding?.streakCode}
                    label="Last Game"
                  />
                  <StandingLine
                    away={awayStanding?.winPctg}
                    home={homeStanding?.winPctg}
                    subLabel="%"
                    label="Winning"
                  />
                  <StandingLine
                    away={awayStanding?.pointPctg}
                    home={homeStanding?.pointPctg}
                    subLabel="%"
                    label="Point"
                  />
                  <StandingLine
                    away={awayStanding?.goalDifferentialPctg}
                    home={homeStanding?.goalDifferentialPctg}
                    subLabel="%"
                    label="Goals Differential"
                  />
                  <StandingLine
                    away={awayStanding?.goalsForPctg}
                    home={homeStanding?.goalsForPctg}
                    subLabel="%"
                    label="Goals For"
                  />
                </section>
                <section
                  id="lines"
                  class="flex-1 h-full flex flex-wrap justify-between text-sm w-full"
                >
                  <article id="awayLines" class="bg-gray-100 basis-6/12">
                    <Lines title="1st Line" lines={awayLines.f1} />
                    <Lines title="2nd Line" lines={awayLines.f2} />
                    <Lines title="3rd Line" lines={awayLines.f3} />
                    <Lines title="Goalies" lines={awayLines.g} />
                  </article>
                  <article id="homeLines" class="bg-blue-100 basis-6/12">
                    <Lines title="1st Line" lines={homeLines.f1} />
                    <Lines title="2nd Line" lines={homeLines.f2} />
                    <Lines title="3rd Line" lines={homeLines.f3} />
                    <Lines title="Goalies" lines={homeLines.g} />
                  </article>
                </section>
              </article>
            </>
          );
        })
      }
    </section>
  </body>
</html>
